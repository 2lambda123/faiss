<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfaiss_1_1IndexReplicasTemplate" kind="class" language="C++" prot="public">
    <compoundname>faiss::IndexReplicasTemplate</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ThreadedIndex&lt; IndexT &gt;</basecompoundref>
    <includes refid="IndexReplicas_8h" local="no">IndexReplicas.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndexT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classfaiss_1_1IndexReplicasTemplate_1aa2482e6d6245830bad1cd29551262793" prot="public" static="no">
        <type>typename IndexT::component_t</type>
        <definition>using faiss::IndexReplicasTemplate&lt; IndexT &gt;::component_t =  typename IndexT::component_t</definition>
        <argsstring></argsstring>
        <name>component_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="23" column="5" bodyfile="faiss/IndexReplicas.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classfaiss_1_1IndexReplicasTemplate_1a33eb25784833dd8dbb24544d8043eec0" prot="public" static="no">
        <type>typename IndexT::distance_t</type>
        <definition>using faiss::IndexReplicasTemplate&lt; IndexT &gt;::distance_t =  typename IndexT::distance_t</definition>
        <argsstring></argsstring>
        <name>distance_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="24" column="5" bodyfile="faiss/IndexReplicas.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a29d851d995abc011c759a855ae0057ae" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexReplicasTemplate&lt; IndexT &gt;::IndexReplicasTemplate</definition>
        <argsstring>(bool threaded=true)</argsstring>
        <name>IndexReplicasTemplate</name>
        <param>
          <type>bool</type>
          <declname>threaded</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The dimension that all sub-indices must share will be the dimension of the first sub-index added <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>do we use one thread per sub-index or do queries sequentially? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1ada9226643e1a48e45c65ffecc57b7391" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexReplicasTemplate&lt; IndexT &gt;::IndexReplicasTemplate</definition>
        <argsstring>(idx_t d, bool threaded=true)</argsstring>
        <name>IndexReplicasTemplate</name>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>threaded</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the dimension that all sub-indices must share </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threaded</parametername>
</parameternamelist>
<parameterdescription>
<para>do we use one thread per sub index or do queries sequentially? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="35" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1adbad834789bb985ce8c99a82dc020248" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexReplicasTemplate&lt; IndexT &gt;::IndexReplicasTemplate</definition>
        <argsstring>(int d, bool threaded=true)</argsstring>
        <name>IndexReplicasTemplate</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>threaded</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>int version due to the implicit bool conversion ambiguity of int as dimension </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="39" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a34bf1c7e890c2e5a57307fd3ee5b980b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::add_replica</definition>
        <argsstring>(IndexT *index)</argsstring>
        <name>add_replica</name>
        <param>
          <type>IndexT *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Alias for addIndex() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="42" column="10" bodyfile="faiss/IndexReplicas.h" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1affcfc49402a7c3d5604689bfbab00326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::remove_replica</definition>
        <argsstring>(IndexT *index)</argsstring>
        <name>remove_replica</name>
        <param>
          <type>IndexT *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Alias for removeIndex() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="47" column="10" bodyfile="faiss/IndexReplicas.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a5cdb2a340a3b4f45ec244d5398a29005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::train</definition>
        <argsstring>(idx_t n, const component_t *x) override</argsstring>
        <name>train</name>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structfaiss_1_1Index" kindref="compound">faiss::Index</ref> API All indices receive the same call </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a6b110e7efab3d01be7ae7cb346d9fbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::add</definition>
        <argsstring>(idx_t n, const component_t *x) override</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structfaiss_1_1Index" kindref="compound">faiss::Index</ref> API All indices receive the same call </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1ad789f012a72a2b2db938d06ad1295019" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::search</definition>
        <argsstring>(idx_t n, const component_t *x, idx_t k, distance_t *distances, idx_t *labels, const SearchParameters *params=nullptr) const override</argsstring>
        <name>search</name>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>distance_t *</type>
          <declname>distances</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref> *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1SearchParameters" kindref="compound">SearchParameters</ref> *</type>
          <declname>params</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structfaiss_1_1Index" kindref="compound">faiss::Index</ref> API Query is partitioned into a slice for each sub-index split by ceil(n / #indices) for our sub-indices </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a9fb6804492c12359b5cc2aa26fe6a6d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::reconstruct</definition>
        <argsstring>(idx_t, component_t *v) const override</argsstring>
        <name>reconstruct</name>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
        </param>
        <param>
          <type>component_t *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>reconstructs from the first index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a7b1233eb598fc053e61b7ceccdb9d71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::syncWithSubIndexes</definition>
        <argsstring>()</argsstring>
        <name>syncWithSubIndexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synchronize the top-level index (IndexShards) with data in the sub-indices </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="75" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a4fd98a5ba105391bfb3e490d84d26b27" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::onAfterAddIndex</definition>
        <argsstring>(IndexT *index) override</argsstring>
        <name>onAfterAddIndex</name>
        <param>
          <type>IndexT *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Called just after an index is added. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1IndexReplicasTemplate_1a1cc7b38bf2e478ac1ee26d332953fb30" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexReplicasTemplate&lt; IndexT &gt;::onAfterRemoveIndex</definition>
        <argsstring>(IndexT *index) override</argsstring>
        <name>onAfterRemoveIndex</name>
        <param>
          <type>IndexT *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Called just after an index is removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexReplicas.h" line="82" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Takes individual <ref refid="structfaiss_1_1Index" kindref="compound">faiss::Index</ref> instances, and splits queries for sending to each <ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> instance, and joins the results together when done. Each index is managed by a separate CPU thread. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ThreadedIndex&lt; IndexT &gt;</label>
      </node>
      <node id="1">
        <label>faiss::IndexReplicasTemplate&lt; IndexT &gt;</label>
        <link refid="classfaiss_1_1IndexReplicasTemplate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ThreadedIndex&lt; IndexT &gt;</label>
      </node>
      <node id="1">
        <label>faiss::IndexReplicasTemplate&lt; IndexT &gt;</label>
        <link refid="classfaiss_1_1IndexReplicasTemplate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/IndexReplicas.h" line="21" column="50" bodyfile="faiss/IndexReplicas.h" bodystart="21" bodyend="83"/>
    <listofallmembers>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a6b110e7efab3d01be7ae7cb346d9fbf9" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>add</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a34bf1c7e890c2e5a57307fd3ee5b980b" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>add_replica</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1aa2482e6d6245830bad1cd29551262793" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>component_t</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a33eb25784833dd8dbb24544d8043eec0" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>distance_t</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a29d851d995abc011c759a855ae0057ae" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>IndexReplicasTemplate</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1ada9226643e1a48e45c65ffecc57b7391" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>IndexReplicasTemplate</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1adbad834789bb985ce8c99a82dc020248" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>IndexReplicasTemplate</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a4fd98a5ba105391bfb3e490d84d26b27" prot="protected" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>onAfterAddIndex</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a1cc7b38bf2e478ac1ee26d332953fb30" prot="protected" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>onAfterRemoveIndex</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a9fb6804492c12359b5cc2aa26fe6a6d6" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>reconstruct</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1affcfc49402a7c3d5604689bfbab00326" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>remove_replica</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1ad789f012a72a2b2db938d06ad1295019" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>search</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a7b1233eb598fc053e61b7ceccdb9d71d" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>syncWithSubIndexes</name></member>
      <member refid="classfaiss_1_1IndexReplicasTemplate_1a5cdb2a340a3b4f45ec244d5398a29005" prot="public" virt="non-virtual"><scope>faiss::IndexReplicasTemplate</scope><name>train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
