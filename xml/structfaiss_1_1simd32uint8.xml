<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structfaiss_1_1simd32uint8" kind="struct" language="C++" prot="public">
    <compoundname>faiss::simd32uint8</compoundname>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1simd32uint8_1a0a028edc495908ef1381853d560aa0d8" prot="public" static="no" mutable="no">
        <type>uint8x16x2_t</type>
        <definition>uint8x16x2_t faiss::simd32uint8::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="725" column="18" bodyfile="faiss/utils/simdlib_neon.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a0061ab97fb706619dbb1db084d89c57e" prot="public" static="no" mutable="no">
        <type>__m256i</type>
        <definition>__m256i faiss::simd256bit::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="30" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a745d258c489056abcb18de77d04dc7da" prot="public" static="no" mutable="no">
        <type>__m256</type>
        <definition>__m256 faiss::simd256bit::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="31" column="16" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a1142cc58e944c92c58668dffee8d0aeb" prot="public" static="no" mutable="no">
        <type>union faiss::simd256bit::@0</type>
        <definition>union faiss::simd256bit::@0 faiss::simd256bit::@1</definition>
        <argsstring></argsstring>
        <name>@1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1acb1ccdc5222ee156bacdc10a5f94d736" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t faiss::simd256bit::u8[32]</definition>
        <argsstring>[32]</argsstring>
        <name>u8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="19" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1ae1a0c5c5a086370f21a346bd20e2b378" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t faiss::simd256bit::u16[16]</definition>
        <argsstring>[16]</argsstring>
        <name>u16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="20" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1aa68a3cf73ecbc73107a720e8c3f1d25c" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t faiss::simd256bit::u32[8]</definition>
        <argsstring>[8]</argsstring>
        <name>u32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="21" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a73b7c0cc868d44cc02c58688977ba4a7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float faiss::simd256bit::f32[8]</definition>
        <argsstring>[8]</argsstring>
        <name>f32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="22" column="15" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a41568f363b0e4ca2f7772717a68f40e2" prot="public" static="no" mutable="no">
        <type>union faiss::simd256bit::@2</type>
        <definition>union faiss::simd256bit::@2 faiss::simd256bit::@3</definition>
        <argsstring></argsstring>
        <name>@3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="23" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1af050f5b54ede870a1d6add3b089d2d42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>()</argsstring>
        <name>simd32uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="351" column="5" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a4eab8c7033bde28909f663d9e8915398" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(__m256i i)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>__m256i</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="353" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="353" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a44349183b73ea0564729eb2283445a2c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(int x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="355" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aacac602e6ae5847325cd03a6f4fd5f25" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="357" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="357" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a1701b6547afb41377eec42d2dd5c1d5d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(simd256bit x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="428" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a963006a6994282e956e4ada482d0cf94" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(const uint8_t *x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="430" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a475df0a6247a4b2f27c32747e43eb3a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="432" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="432" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a3dd9c7e5676c98b54f4a5fe09b6e24d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="445" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="445" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1ac962d91b9b95592d27786049f756b9fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="449" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="449" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aa5f0d78560238a22d1c2195ebe920aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::set1</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>set1</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="453" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="453" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a721bdd92857caa1ee42ec612ad4eeae5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator&amp;</definition>
        <argsstring>(simd256bit other) const</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="457" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a5a798e078468d52680065e303f0dcd69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator+</definition>
        <argsstring>(simd32uint8 other) const</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="461" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a3e7e14811119074e4f425eed96b6ed3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::lookup_2_lanes</definition>
        <argsstring>(simd32uint8 idx) const</argsstring>
        <name>lookup_2_lanes</name>
        <param>
          <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="465" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="465" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a60712b19d7e880431c5a240185c84ead" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd16uint16" kindref="compound">simd16uint16</ref></type>
        <definition>simd16uint16 faiss::simd32uint8::lane0_as_uint16</definition>
        <argsstring>() const</argsstring>
        <name>lane0_as_uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="471" column="18" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aa529a14ff0594d8dacbeab2a1c942aa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd16uint16" kindref="compound">simd16uint16</ref></type>
        <definition>simd16uint16 faiss::simd32uint8::lane1_as_uint16</definition>
        <argsstring>() const</argsstring>
        <name>lane1_as_uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="476" column="18" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a784675cb1a2d01a089ef4958d6c7f79a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator+=</definition>
        <argsstring>(simd32uint8 other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="481" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a42caa7515646aa765aa0ff7682390b64" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t faiss::simd32uint8::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="487" column="13" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="487" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1af050f5b54ede870a1d6add3b089d2d42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>()</argsstring>
        <name>simd32uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="402" column="5" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="402" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a44349183b73ea0564729eb2283445a2c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(int x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="404" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="404" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aacac602e6ae5847325cd03a6f4fd5f25" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="408" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a12aecac1e4bead2e5cb0fb354a4f002f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(const simd256bit &amp;x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="481" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="481" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a963006a6994282e956e4ada482d0cf94" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(const uint8_t *x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="483" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="483" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a475df0a6247a4b2f27c32747e43eb3a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="485" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="485" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a3dd9c7e5676c98b54f4a5fe09b6e24d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="495" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1ac962d91b9b95592d27786049f756b9fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="499" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="499" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aa5f0d78560238a22d1c2195ebe920aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::set1</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>set1</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="503" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a59dcb699e6a911d8ab2e43a45c2d4195" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator&amp;</definition>
        <argsstring>(const simd256bit &amp;other) const</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="521" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="521" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a9ff1f702dd8a74e68b7d45fc3fa4340d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator+</definition>
        <argsstring>(const simd32uint8 &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="527" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="527" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aabe2595cea3bfbf441cb23a86dbcd0fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::lookup_2_lanes</definition>
        <argsstring>(const simd32uint8 &amp;idx) const</argsstring>
        <name>lookup_2_lanes</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="533" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="533" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a82e41a14b9fba96f53c53a6e0fa0aff4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator+=</definition>
        <argsstring>(const simd32uint8 &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="553" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="553" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a42caa7515646aa765aa0ff7682390b64" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t faiss::simd32uint8::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="559" column="13" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="559" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a60eed9a0f64bcf885c6ccd17b74f93e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>()=default</argsstring>
        <name>simd32uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="727" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a44349183b73ea0564729eb2283445a2c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(int x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="729" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="729" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aacac602e6ae5847325cd03a6f4fd5f25" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="731" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="731" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a2fb1ec15d12816b44c8311f34efc8878" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(const uint8x16x2_t &amp;v)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>const uint8x16x2_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="733" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="733" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a84978e5132d269e44ddd849d25161bb4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structfaiss_1_1detail_1_1simdlib_1_1is__simd256bit" kindref="compound">detail::simdlib::is_simd256bit</ref>&lt; T &gt;::value, std::nullptr_t &gt;::type</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="781" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="781" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a963006a6994282e956e4ada482d0cf94" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd32uint8::simd32uint8</definition>
        <argsstring>(const uint8_t *x)</argsstring>
        <name>simd32uint8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="784" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="784" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a5d2f962fd7470b498d9345b7ae525632" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="787" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="787" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a3372ed869128b0b4637e9ed05b08a3b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::storeu</definition>
        <argsstring>(uint8_t *ptr) const</argsstring>
        <name>storeu</name>
        <param>
          <type>uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="792" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a1535ca1b590597e078064b79d2633851" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::loadu</definition>
        <argsstring>(const uint8_t *ptr)</argsstring>
        <name>loadu</name>
        <param>
          <type>const uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="797" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="797" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a61478775ada7c758a78ead35b4af00d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::store</definition>
        <argsstring>(uint8_t *ptr) const</argsstring>
        <name>store</name>
        <param>
          <type>uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="802" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="802" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a9f7464bbf7c64bbf4dc98bc798f96eb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::bin</definition>
        <argsstring>(char bits[257]) const</argsstring>
        <name>bin</name>
        <param>
          <type>char</type>
          <declname>bits</declname>
          <array>[257]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="806" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="806" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a17f5d20835c2db40bc629cbff8cd369f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::bin</definition>
        <argsstring>() const</argsstring>
        <name>bin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="815" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="815" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a475df0a6247a4b2f27c32747e43eb3a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="819" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="819" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a3dd9c7e5676c98b54f4a5fe09b6e24d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="823" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="823" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1ac962d91b9b95592d27786049f756b9fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd32uint8::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="827" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="827" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aa5f0d78560238a22d1c2195ebe920aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd32uint8::set1</definition>
        <argsstring>(uint8_t x)</argsstring>
        <name>set1</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="831" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="831" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a506e75af01bcdf0c8c954b2b5e7eb58b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structfaiss_1_1detail_1_1simdlib_1_1is__simd256bit" kindref="compound">detail::simdlib::is_simd256bit</ref>&lt; T &gt;::value, std::nullptr_t &gt;::type</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator&amp;</definition>
        <argsstring>(const T &amp;other) const</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>const T &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="840" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="840" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a9ff1f702dd8a74e68b7d45fc3fa4340d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator+</definition>
        <argsstring>(const simd32uint8 &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="847" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="847" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1aabe2595cea3bfbf441cb23a86dbcd0fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::lookup_2_lanes</definition>
        <argsstring>(const simd32uint8 &amp;idx) const</argsstring>
        <name>lookup_2_lanes</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="853" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a82e41a14b9fba96f53c53a6e0fa0aff4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>simd32uint8 faiss::simd32uint8::operator+=</definition>
        <argsstring>(const simd32uint8 &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="858" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="858" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a42caa7515646aa765aa0ff7682390b64" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t faiss::simd32uint8::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="864" column="13" bodyfile="faiss/utils/simdlib_neon.h" bodystart="864" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a7bbfd09ddaf5128a53f045d2b06773aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd32uint8::is_same_as</definition>
        <argsstring>(simd32uint8 other) const</argsstring>
        <name>is_same_as</name>
        <param>
          <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="872" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="872" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a46f3f3e576ad528e64505c73980c903f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::storeu</definition>
        <argsstring>(void *ptr) const</argsstring>
        <name>storeu</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="47" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a44b57fcfb969954b9fc42f7dfee6bdf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::loadu</definition>
        <argsstring>(const void *ptr)</argsstring>
        <name>loadu</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="51" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a9cd7429e3408e78181b1810221664c0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::store</definition>
        <argsstring>(void *ptr) const</argsstring>
        <name>store</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="55" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a69f933068df260aa8c0f3ac7686e1417" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd256bit::is_same_as</definition>
        <argsstring>(simd256bit other) const</argsstring>
        <name>is_same_as</name>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="75" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="75" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a4097e79961731ff6c18503f062fbd9ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>_0</declname>
            <defname>_0</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_1</declname>
            <defname>_1</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_2</declname>
            <defname>_2</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_3</declname>
            <defname>_3</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_4</declname>
            <defname>_4</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_5</declname>
            <defname>_5</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_6</declname>
            <defname>_6</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_7</declname>
            <defname>_7</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_8</declname>
            <defname>_8</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_9</declname>
            <defname>_9</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_10</declname>
            <defname>_10</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_11</declname>
            <defname>_11</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_12</declname>
            <defname>_12</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_13</declname>
            <defname>_13</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_14</declname>
            <defname>_14</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_15</declname>
            <defname>_15</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_16</declname>
            <defname>_16</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_17</declname>
            <defname>_17</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_18</declname>
            <defname>_18</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_19</declname>
            <defname>_19</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_20</declname>
            <defname>_20</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_21</declname>
            <defname>_21</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_22</declname>
            <defname>_22</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_23</declname>
            <defname>_23</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_24</declname>
            <defname>_24</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_25</declname>
            <defname>_25</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_26</declname>
            <defname>_26</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_27</declname>
            <defname>_27</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_28</declname>
            <defname>_28</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_29</declname>
            <defname>_29</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_30</declname>
            <defname>_30</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_31</declname>
            <defname>_31</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>static simd32uint8 faiss::simd32uint8::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="392" column="24" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="392" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a4097e79961731ff6c18503f062fbd9ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>_0</declname>
            <defname>_0</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_1</declname>
            <defname>_1</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_2</declname>
            <defname>_2</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_3</declname>
            <defname>_3</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_4</declname>
            <defname>_4</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_5</declname>
            <defname>_5</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_6</declname>
            <defname>_6</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_7</declname>
            <defname>_7</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_8</declname>
            <defname>_8</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_9</declname>
            <defname>_9</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_10</declname>
            <defname>_10</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_11</declname>
            <defname>_11</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_12</declname>
            <defname>_12</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_13</declname>
            <defname>_13</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_14</declname>
            <defname>_14</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_15</declname>
            <defname>_15</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_16</declname>
            <defname>_16</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_17</declname>
            <defname>_17</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_18</declname>
            <defname>_18</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_19</declname>
            <defname>_19</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_20</declname>
            <defname>_20</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_21</declname>
            <defname>_21</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_22</declname>
            <defname>_22</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_23</declname>
            <defname>_23</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_24</declname>
            <defname>_24</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_25</declname>
            <defname>_25</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_26</declname>
            <defname>_26</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_27</declname>
            <defname>_27</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_28</declname>
            <defname>_28</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_29</declname>
            <defname>_29</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_30</declname>
            <defname>_30</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_31</declname>
            <defname>_31</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>static simd32uint8 faiss::simd32uint8::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="444" column="24" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="444" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1adbc2039e6054117950fbf9dfbd220678" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>static simd32uint8 faiss::simd32uint8::binary_func</definition>
        <argsstring>(const simd32uint8 &amp;a, const simd32uint8 &amp;b, F &amp;&amp;f)</argsstring>
        <name>binary_func</name>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="510" column="24" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="510" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd32uint8_1a4097e79961731ff6c18503f062fbd9ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>_0</declname>
            <defname>_0</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_1</declname>
            <defname>_1</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_2</declname>
            <defname>_2</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_3</declname>
            <defname>_3</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_4</declname>
            <defname>_4</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_5</declname>
            <defname>_5</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_6</declname>
            <defname>_6</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_7</declname>
            <defname>_7</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_8</declname>
            <defname>_8</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_9</declname>
            <defname>_9</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_10</declname>
            <defname>_10</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_11</declname>
            <defname>_11</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_12</declname>
            <defname>_12</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_13</declname>
            <defname>_13</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_14</declname>
            <defname>_14</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_15</declname>
            <defname>_15</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_16</declname>
            <defname>_16</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_17</declname>
            <defname>_17</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_18</declname>
            <defname>_18</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_19</declname>
            <defname>_19</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_20</declname>
            <defname>_20</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_21</declname>
            <defname>_21</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_22</declname>
            <defname>_22</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_23</declname>
            <defname>_23</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_24</declname>
            <defname>_24</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_25</declname>
            <defname>_25</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_26</declname>
            <defname>_26</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_27</declname>
            <defname>_27</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_28</declname>
            <defname>_28</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_29</declname>
            <defname>_29</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_30</declname>
            <defname>_30</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>_31</declname>
            <defname>_31</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structfaiss_1_1simd32uint8" kindref="compound">simd32uint8</ref></type>
        <definition>static simd32uint8 faiss::simd32uint8::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="768" column="24" bodyfile="faiss/utils/simdlib_neon.h" bodystart="768" bodyend="774"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>faiss::simd32uint8</label>
        <link refid="structfaiss_1_1simd32uint8"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::simd256bit</label>
        <link refid="structfaiss_1_1simd256bit"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>faiss::simd32uint8</label>
        <link refid="structfaiss_1_1simd32uint8"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::simd256bit</label>
        <link refid="structfaiss_1_1simd256bit"/>
      </node>
    </collaborationgraph>
    <location file="faiss/utils/simdlib_avx2.h" line="350" column="1" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="350" bodyend="492"/>
    <listofallmembers>
      <member refid="structfaiss_1_1simd32uint8_1a9f7464bbf7c64bbf4dc98bc798f96eb3" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>bin</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a17f5d20835c2db40bc629cbff8cd369f" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>bin</name></member>
      <member refid="structfaiss_1_1simd32uint8_1adbc2039e6054117950fbf9dfbd220678" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>binary_func</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a5d2f962fd7470b498d9345b7ae525632" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>clear</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a4097e79961731ff6c18503f062fbd9ca" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>create</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a4097e79961731ff6c18503f062fbd9ca" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>create</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a4097e79961731ff6c18503f062fbd9ca" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>create</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a0a028edc495908ef1381853d560aa0d8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>data</name></member>
      <member refid="structfaiss_1_1simd32uint8_1ac962d91b9b95592d27786049f756b9fd" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd32uint8_1ac962d91b9b95592d27786049f756b9fd" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd32uint8_1ac962d91b9b95592d27786049f756b9fd" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a475df0a6247a4b2f27c32747e43eb3a8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a475df0a6247a4b2f27c32747e43eb3a8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a475df0a6247a4b2f27c32747e43eb3a8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd256bit_1a745d258c489056abcb18de77d04dc7da" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>f</name></member>
      <member refid="structfaiss_1_1simd256bit_1a73b7c0cc868d44cc02c58688977ba4a7" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>f32</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a3dd9c7e5676c98b54f4a5fe09b6e24d4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a3dd9c7e5676c98b54f4a5fe09b6e24d4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a3dd9c7e5676c98b54f4a5fe09b6e24d4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd256bit_1a0061ab97fb706619dbb1db084d89c57e" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>i</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a7bbfd09ddaf5128a53f045d2b06773aa" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>is_same_as</name></member>
      <member refid="structfaiss_1_1simd256bit_1a69f933068df260aa8c0f3ac7686e1417" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd32uint8</scope><name>is_same_as</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a60712b19d7e880431c5a240185c84ead" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>lane0_as_uint16</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aa529a14ff0594d8dacbeab2a1c942aa3" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>lane1_as_uint16</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a1535ca1b590597e078064b79d2633851" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>loadu</name></member>
      <member refid="structfaiss_1_1simd256bit_1a44b57fcfb969954b9fc42f7dfee6bdf2" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd32uint8</scope><name>loadu</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a3e7e14811119074e4f425eed96b6ed3a" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>lookup_2_lanes</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aabe2595cea3bfbf441cb23a86dbcd0fa" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>lookup_2_lanes</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aabe2595cea3bfbf441cb23a86dbcd0fa" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>lookup_2_lanes</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a721bdd92857caa1ee42ec612ad4eeae5" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator&amp;</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a59dcb699e6a911d8ab2e43a45c2d4195" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator&amp;</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a506e75af01bcdf0c8c954b2b5e7eb58b" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator&amp;</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a5a798e078468d52680065e303f0dcd69" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a9ff1f702dd8a74e68b7d45fc3fa4340d" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a9ff1f702dd8a74e68b7d45fc3fa4340d" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a784675cb1a2d01a089ef4958d6c7f79a" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a82e41a14b9fba96f53c53a6e0fa0aff4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a82e41a14b9fba96f53c53a6e0fa0aff4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a42caa7515646aa765aa0ff7682390b64" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator[]</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a42caa7515646aa765aa0ff7682390b64" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator[]</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a42caa7515646aa765aa0ff7682390b64" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>operator[]</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aa5f0d78560238a22d1c2195ebe920aa8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aa5f0d78560238a22d1c2195ebe920aa8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aa5f0d78560238a22d1c2195ebe920aa8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a26e2b4465abb0656c42798b34d099ff9" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1addeecdb12ca2085ffc347894adfa1eff" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd32uint8_1af050f5b54ede870a1d6add3b089d2d42" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a4eab8c7033bde28909f663d9e8915398" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a44349183b73ea0564729eb2283445a2c" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aacac602e6ae5847325cd03a6f4fd5f25" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a1701b6547afb41377eec42d2dd5c1d5d" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a963006a6994282e956e4ada482d0cf94" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1af050f5b54ede870a1d6add3b089d2d42" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a44349183b73ea0564729eb2283445a2c" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aacac602e6ae5847325cd03a6f4fd5f25" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a12aecac1e4bead2e5cb0fb354a4f002f" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a963006a6994282e956e4ada482d0cf94" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a60eed9a0f64bcf885c6ccd17b74f93e8" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a44349183b73ea0564729eb2283445a2c" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1aacac602e6ae5847325cd03a6f4fd5f25" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a2fb1ec15d12816b44c8311f34efc8878" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a84978e5132d269e44ddd849d25161bb4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a963006a6994282e956e4ada482d0cf94" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>simd32uint8</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a61478775ada7c758a78ead35b4af00d4" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>store</name></member>
      <member refid="structfaiss_1_1simd256bit_1a9cd7429e3408e78181b1810221664c0f" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd32uint8</scope><name>store</name></member>
      <member refid="structfaiss_1_1simd32uint8_1a3372ed869128b0b4637e9ed05b08a3b6" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>storeu</name></member>
      <member refid="structfaiss_1_1simd256bit_1a46f3f3e576ad528e64505c73980c903f" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd32uint8</scope><name>storeu</name></member>
      <member refid="structfaiss_1_1simd256bit_1ae1a0c5c5a086370f21a346bd20e2b378" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>u16</name></member>
      <member refid="structfaiss_1_1simd256bit_1aa68a3cf73ecbc73107a720e8c3f1d25c" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>u32</name></member>
      <member refid="structfaiss_1_1simd256bit_1acb1ccdc5222ee156bacdc10a5f94d736" prot="public" virt="non-virtual"><scope>faiss::simd32uint8</scope><name>u8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
