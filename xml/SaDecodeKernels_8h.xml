<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="SaDecodeKernels_8h" kind="file" language="C++">
    <compoundname>SaDecodeKernels.h</compoundname>
    <includes refid="MinMax-inl_8h" local="no">faiss/cppcontrib/sa_decode/MinMax-inl.h</includes>
    <includes refid="MinMaxFP16-inl_8h" local="no">faiss/cppcontrib/sa_decode/MinMaxFP16-inl.h</includes>
    <includes refid="Level2-inl_8h" local="no">faiss/cppcontrib/sa_decode/Level2-inl.h</includes>
    <includes refid="PQ-inl_8h" local="no">faiss/cppcontrib/sa_decode/PQ-inl.h</includes>
    <incdepgraph>
      <node id="1">
        <label>faiss/cppcontrib/SaDecodeKernels.h</label>
        <link refid="SaDecodeKernels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>faiss/cppcontrib/sa_decode/PQ-inl.h</label>
        <link refid="PQ-inl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>faiss/impl/platform_macros.h</label>
      </node>
      <node id="10">
        <label>faiss/cppcontrib/sa_decode/Level2-inl.h</label>
        <link refid="Level2-inl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>faiss/utils/fp16.h</label>
        <link refid="fp16_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>faiss/utils/fp16-inl.h</label>
        <link refid="fp16-inl_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>faiss/cppcontrib/sa_decode/MinMaxFP16-inl.h</label>
        <link refid="MinMaxFP16-inl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>faiss/cppcontrib/detail/CoarseBitType.h</label>
        <link refid="CoarseBitType_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>faiss/cppcontrib/sa_decode/MinMax-inl.h</label>
        <link refid="MinMax-inl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>(c)<sp/>Meta<sp/>Platforms,<sp/>Inc.<sp/>and<sp/>affiliates.<sp/>Confidential<sp/>and<sp/>proprietary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>contains<sp/>a<sp/>custom<sp/>fast<sp/>implementation<sp/>of<sp/>faiss::Index::sa_decode()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>function<sp/>for<sp/>the<sp/>following<sp/>index<sp/>families:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>IVF256,PQ[1]x8np</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x8,PQ[2]x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>IVF[2^9-2^16<sp/>bit],PQ[1]x8<sp/>(such<sp/>as<sp/>IVF1024,PQ16np)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual1x[9-16<sp/>bit],PQ[1]x8<sp/>(such<sp/>as<sp/>Residual1x9,PQ8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>PQ[1]x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additionally,<sp/>AVX2<sp/>and<sp/>ARM<sp/>versions<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x8,PQ[2]x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x8,PQ[2]x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x10,PQ[2]x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x10,PQ[2]x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x16,PQ[2]x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual[1]x16,PQ[2]x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual1x[9-16<sp/>bit],PQ[1]x10<sp/>(such<sp/>as<sp/>Residual1x9,PQ16x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>*<sp/>(use<sp/>with<sp/>COARSE_BITS=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Residual1x[9-16<sp/>bit],PQ[1]x16<sp/>(such<sp/>as<sp/>Residual1x9,PQ16x16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>*<sp/>(use<sp/>with<sp/>COARSE_BITS=16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>PQ[1]x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*<sp/>PQ[1]x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unfortunately,<sp/>currently<sp/>Faiss<sp/>does<sp/>not<sp/>support<sp/>something<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IVF256,PQ16x10np</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>goal<sp/>was<sp/>to<sp/>achieve<sp/>the<sp/>maximum<sp/>performance,<sp/>so<sp/>the<sp/>template<sp/>version<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is.<sp/>The<sp/>provided<sp/>index<sp/>families<sp/>share<sp/>the<sp/>same<sp/>code<sp/>for<sp/>sa_decode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>front-end<sp/>code<sp/>provides<sp/>two<sp/>high-level<sp/>structures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>First<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>DIM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>COARSE_SIZE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>FINE_SIZE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>COARSE_BITS<sp/>=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>FINE_BITS<sp/>=<sp/>8&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>struct<sp/>Index2LevelDecoder<sp/>{<sp/>/*...*/<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>DIM<sp/>is<sp/>the<sp/>dimensionality<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>COARSE_SIZE<sp/>is<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>coarse<sp/>quantizer<sp/>(IVF,<sp/>Residual)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>FINE_SIZE<sp/>is<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>ProductQuantizer<sp/>dsq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>COARSE_BITS<sp/>is<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>that<sp/>are<sp/>needed<sp/>to<sp/>represent<sp/>a<sp/>coarse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>quantizer<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>FINE_BITS<sp/>is<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>that<sp/>are<sp/>needed<sp/>to<sp/>represent<sp/>a<sp/>fine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>quantizer<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;IVF256,PQ8np&quot;<sp/>for<sp/>160-dim<sp/>data<sp/>translates<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Index2LevelDecoder&lt;160,160,20,8&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;Residual4x8,PQ16&quot;<sp/>for<sp/>256-dim<sp/>data<sp/>translates<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Index2LevelDecoder&lt;256,64,1,8&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;IVF1024,PQ16np&quot;<sp/>for<sp/>256-dim<sp/>data<sp/>translates<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Index2LevelDecoder&lt;256,256,16,10&gt;.<sp/>But<sp/>as<sp/>there<sp/>are<sp/>only<sp/>1<sp/>coarse<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>element,<sp/>Index2LevelDecoder&lt;256,256,16,16&gt;<sp/>can<sp/>be<sp/>used<sp/>as<sp/>a<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>decoder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;Residual4x10,PQ16x10np&quot;<sp/>for<sp/>256-dim<sp/>data<sp/>translates<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Index2LevelDecoder&lt;256,64,16,10,10&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additional<sp/>supported<sp/>values<sp/>for<sp/>COARSE_BITS<sp/>and<sp/>FINE_BITS<sp/>may<sp/>be<sp/>added<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Second<sp/>one:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>DIM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>FINE_SIZE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intptr_t<sp/>FINE_BITS<sp/>=<sp/>8&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>struct<sp/>IndexPQDecoder<sp/>{<sp/>/*...*/<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>DIM<sp/>is<sp/>the<sp/>dimensionality<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>FINE_SIZE<sp/>is<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>ProductQuantizer<sp/>dsq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>FINE_BITS<sp/>is<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>that<sp/>are<sp/>needed<sp/>to<sp/>represent<sp/>a<sp/>fine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>quantizer<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;PQ8np&quot;<sp/>for<sp/>160-dim<sp/>data<sp/>translates<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IndexPQDecoder&lt;160,20&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unlike<sp/>the<sp/>general<sp/>purpose<sp/>version<sp/>in<sp/>faiss::Index::sa_decode(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>this<sp/>version<sp/>provides<sp/>the<sp/>following<sp/>functions<sp/>(please<sp/>note<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>pqCoarseCentroids<sp/>params<sp/>are<sp/>not<sp/>available<sp/>for<sp/>IndexPQDecoder,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>but<sp/>the<sp/>functionality<sp/>is<sp/>the<sp/>same<sp/>as<sp/>for<sp/>Index2LevelDecoder):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>::store,<sp/>which<sp/>is<sp/>similar<sp/>to<sp/>sa_decode(1,<sp/>input,<sp/>output),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>method<sp/>signature<sp/>is<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>void<sp/>store(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>const<sp/>__restrict<sp/>outputStore);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>::accum,<sp/>which<sp/>is<sp/>used<sp/>to<sp/>create<sp/>a<sp/>linear<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>of<sp/>decoded<sp/>vectors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>faiss::Index*<sp/>index;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>float<sp/>weight;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>buffer(d,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>index-&gt;sa_decode(1,<sp/>input,<sp/>buffer.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>iDim<sp/>=<sp/>0;<sp/>iDim<sp/>&lt;<sp/>d;<sp/>iDim++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[iDim]<sp/>+=<sp/>weight<sp/>*<sp/>input[iDim];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>method<sp/>signature<sp/>is<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>static<sp/>void<sp/>accum(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float<sp/>weight,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>const<sp/>__restrict<sp/>outputAccum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>There<sp/>is<sp/>an<sp/>additional<sp/>overload<sp/>for<sp/>::accum<sp/>that<sp/>decodes<sp/>two<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>per<sp/>call.<sp/>This<sp/>provides<sp/>an<sp/>additional<sp/>speedup<sp/>because<sp/>of<sp/>a<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>superscalar<sp/>architecture.<sp/>Doing<sp/>more<sp/>vectors<sp/>per<sp/>call<sp/>is<sp/>less<sp/>attractive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>because<sp/>of<sp/>the<sp/>possible<sp/>lack<sp/>of<sp/>available<sp/>CPU<sp/>registers,<sp/>but<sp/>it<sp/>is<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>doable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>method<sp/>signature<sp/>is<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>static<sp/>void<sp/>accum(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float<sp/>weight0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float<sp/>weight1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>const<sp/>__restrict<sp/>outputAccum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>And<sp/>one<sp/>more<sp/>overload<sp/>for<sp/>::accum<sp/>that<sp/>decodes<sp/>and<sp/>accumulates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>three<sp/>vectors<sp/>per<sp/>call.<sp/>Sometimes,<sp/>it<sp/>makes<sp/>sense,<sp/>at<sp/>least<sp/>for<sp/>AVX2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>method<sp/>signature<sp/>is<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>static<sp/>void<sp/>accum(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float<sp/>weight0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float<sp/>weight1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqCoarseCentroids2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float*<sp/>const<sp/>__restrict<sp/>pqFineCentroids2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint8_t*<sp/>const<sp/>__restrict<sp/>code2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>float<sp/>weight2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>const<sp/>__restrict<sp/>outputAccum);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>provided<sp/>version<sp/>is<sp/>not<sp/>multithreaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently,<sp/>an<sp/>AVX2+FMA<sp/>implementation<sp/>is<sp/>available.<sp/>AVX512<sp/>version<sp/>is<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>doable,<sp/>but<sp/>it<sp/>was<sp/>found<sp/>to<sp/>be<sp/>slower<sp/>than<sp/>AVX2<sp/>for<sp/>real<sp/>world<sp/>applications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>that<sp/>I<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/MinMax-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/MinMaxFP16-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVX2__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/Level2-avx2-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/PQ-avx2-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ARM_NEON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/Level2-neon-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/PQ-neon-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/Level2-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/cppcontrib/sa_decode/PQ-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="faiss/cppcontrib/SaDecodeKernels.h"/>
  </compounddef>
</doxygen>
